/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.CustomerSupport.CustomerSupportMemberWorkArea;



import userInterface.CustomerSupport.CustomerSupportAdminWorkArea.*;
import MainCentralisationSystem.MedicalServiceCentralisationEcoSystem;

import CustomerSupportTeam.CustomerSupportMember.CustomerSupportMemberDirectory;
import CustomerSupportTeam.CustomerSupportMember.CustomerSupportMember;
import CustomerSupportTeam.CustomerSupportTeam;
import HospitalManagement.Hospital.Hospital;
import HospitalManagement.Hospital.HospitalDirectory;
import HospitalManagement.Requests.Request;
import HospitalManagement.Requests.RequestDirectory;


import MainCentralisationSystem.Role.CustomerSupportMemberRole;
import MainCentralisationSystem.Role.FrontDeskOperatorRole;
import MainCentralisationSystem.Role.Role;

import MainCentralisationSystem.UserAccount;
import MainCentralisationSystem.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Shreya
 */
public class CustomerSupportMemberWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OperationalAccountsPage
     */
    JPanel userProcessContainer;
    MedicalServiceCentralisationEcoSystem medicalServiceCentralisationEcoSystem;
    
    CustomerSupportTeam customerSupportTeam;
    private String request_category;
    Request request;
    public CustomerSupportMemberWorkAreaJPanel(JPanel userProcessContainer , MedicalServiceCentralisationEcoSystem medicalServiceCentralisationEcoSystem) {
        
        this.userProcessContainer = userProcessContainer;
        this.medicalServiceCentralisationEcoSystem = medicalServiceCentralisationEcoSystem;
        initComponents();
        
        addrecordstotable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRequests = new javax.swing.JTable();
        jButtonCreate = new javax.swing.JButton();
        jTextFieldCustPhone = new javax.swing.JTextField();
        jButtonUpdate = new javax.swing.JButton();
        jLabelPassword = new javax.swing.JLabel();
        jTextFieldNotes = new javax.swing.JTextField();
        jTextFieldCustName = new javax.swing.JTextField();
        jLabelEmpID = new javax.swing.JLabel();
        jButtonDelete = new javax.swing.JButton();
        jLabelEmpName = new javax.swing.JLabel();
        jRadioButtonMedTest = new javax.swing.JRadioButton();
        jRadioButtonConsultation = new javax.swing.JRadioButton();
        jRadioButtonMedEquipment = new javax.swing.JRadioButton();
        jLabelEmpName1 = new javax.swing.JLabel();
        jLabelEmpName2 = new javax.swing.JLabel();
        jTextFieldCustEmail = new javax.swing.JTextField();
        jLabelEmpName3 = new javax.swing.JLabel();
        jTextFieldCustPincode = new javax.swing.JTextField();
        jLabelEmpName5 = new javax.swing.JLabel();
        jDateChooserTestDate = new com.toedter.calendar.JDateChooser();
        bgdimg = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 70, 169));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer Support Members");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, 706, -1));

        jTableRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CaseId", "Customer Name", "CustomerPhone", "CustomerEmail", "CustomerPincode", "Request Date", "RequestCategory", "CaseDescription", "Timestamp"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableRequests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableRequestsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableRequests);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 870, 870, 100));

        jButtonCreate.setBackground(new java.awt.Color(0, 0, 0));
        jButtonCreate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCreate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCreate.setText("CREATE");
        jButtonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateActionPerformed(evt);
            }
        });
        add(jButtonCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 430, 90, 40));
        add(jTextFieldCustPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 460, 421, -1));

        jButtonUpdate.setBackground(new java.awt.Color(0, 0, 0));
        jButtonUpdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setText("UPDATE");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });
        add(jButtonUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 510, 90, 40));

        jLabelPassword.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelPassword.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelPassword.setText("Notes");
        add(jLabelPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 770, 88, -1));

        jTextFieldNotes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNotesActionPerformed(evt);
            }
        });
        add(jTextFieldNotes, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 740, 403, 65));

        jTextFieldCustName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCustNameActionPerformed(evt);
            }
        });
        add(jTextFieldCustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 410, 421, -1));

        jLabelEmpID.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelEmpID.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmpID.setText("Customer Name");
        add(jLabelEmpID, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 410, 150, -1));

        jButtonDelete.setBackground(new java.awt.Color(0, 0, 0));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonDelete.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDelete.setText("DELETE");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 590, 90, 40));

        jLabelEmpName.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelEmpName.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmpName.setText("Customer Phone");
        add(jLabelEmpName, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 460, 150, -1));

        jRadioButtonMedTest.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonMedTest.setText("Medical Test");
        jRadioButtonMedTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMedTestActionPerformed(evt);
            }
        });
        add(jRadioButtonMedTest, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 610, -1, -1));

        jRadioButtonConsultation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonConsultation.setText("Consulation");
        jRadioButtonConsultation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonConsultationActionPerformed(evt);
            }
        });
        add(jRadioButtonConsultation, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 610, -1, -1));

        jRadioButtonMedEquipment.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonMedEquipment.setText("Medical equipment");
        jRadioButtonMedEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMedEquipmentActionPerformed(evt);
            }
        });
        add(jRadioButtonMedEquipment, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 610, -1, -1));

        jLabelEmpName1.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelEmpName1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmpName1.setText("Request Category");
        add(jLabelEmpName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 610, 150, -1));

        jLabelEmpName2.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelEmpName2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmpName2.setText("Customer Email");
        add(jLabelEmpName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 510, 150, -1));
        add(jTextFieldCustEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 510, 421, -1));

        jLabelEmpName3.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelEmpName3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmpName3.setText("Customer Pincode");
        add(jLabelEmpName3, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 560, 150, -1));

        jTextFieldCustPincode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCustPincodeActionPerformed(evt);
            }
        });
        jTextFieldCustPincode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCustPincodeKeyPressed(evt);
            }
        });
        add(jTextFieldCustPincode, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 560, 421, -1));

        jLabelEmpName5.setFont(new java.awt.Font("Dubai Medium", 1, 16)); // NOI18N
        jLabelEmpName5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabelEmpName5.setText("Date ");
        add(jLabelEmpName5, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 670, 150, -1));
        add(jDateChooserTestDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 670, 170, 30));

        bgdimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userInterface/Images/CustomerSupportMemberWorkAreaJPanel.png"))); // NOI18N
        add(bgdimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1180));
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNotesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNotesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNotesActionPerformed

    private void jTextFieldCustNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCustNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCustNameActionPerformed
    public void raise_request(ArrayList<String> user_input){
        
        DefaultTableModel model = (DefaultTableModel) jTableRequests.getModel();
        
//        UserAccountDirectory usersList = medicalServiceCentralisationEcoSystem.getUserAccountDirectory();
        RequestDirectory requestList = medicalServiceCentralisationEcoSystem.getRequestDirectory();
        System.out.println(requestList.getLast_case_id());
//        userAccount = new UserAccount(user_input.get(0), user_input.get(2),new CustomerSupportMemberRole());
        request = new Request();
        String current_timeStamp = new SimpleDateFormat("yyyy.MM.dd.HH.mm.ss").format(new Date());
        String last_case_id = requestList.getLast_case_id();
        int last_case_id_int = Integer.parseInt(last_case_id.replaceAll("[\\D]", ""));
        last_case_id_int++;
        
        request.setCase_id(last_case_id);
        request.setCustomer_name(user_input.get(0));
        request.setCustomer_phone(user_input.get(1));
        request.setCustomer_email(user_input.get(2));
//        request.setHospital_id(user_input.get(3));
        request.setCustomer_pincode(user_input.get(3));
        request.setRequest_date(user_input.get(4));
        request.setRequest_category(user_input.get(5));
        request.setRequest_description(user_input.get(6));
        request.setMode(user_input.get(7));
        request.setModified_time(current_timeStamp);
        request.setRequest_status("new");
        requestList.addRequest(request);
        String last_case_id_new = "REQUEST" + String.format("%03d", last_case_id_int);
        requestList.setLast_case_id(last_case_id_new);
            
        JOptionPane.showMessageDialog(this, "New Request Information has been added.");
        model.addRow(new Object[]{request,request.getCustomer_name(),request.getCustomer_phone(),request.getCustomer_email(),request.getCustomer_pincode(),request.getRequest_date(),request.getRequest_category(),request.getRequest_description(),current_timeStamp});
        clearFields();
        
    }
    private void jButtonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateActionPerformed
        // TODO add your handling code here:
        
        ArrayList<String> user_input = check_empty_field();
        raise_request(user_input);
        
    }//GEN-LAST:event_jButtonCreateActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        int selected_row_ix = jTableRequests.getSelectedRow();

        if(selected_row_ix < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to update.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) jTableRequests.getModel();
        UserAccount select_account_details = (UserAccount)model.getValueAt(selected_row_ix, 0);        
//        UserAccountDirectory = medicalServiceCentralisationEcoSystem.getUserAccountDirectory();
//        ArrayList<UserAccount> userAccountList = UserAccountDirectory.getUserAccountList();
//        for(UserAccount userAccount: userAccountList)
//        {
//            if(userAccount.getUsername().equals(select_account_details.getUsername()))
//            {
//                CustomerSupportTeam customerSupportTeam = userAccount.getCustomerSupportTeam();
//                ArrayList<String> user_input = check_empty_field();
//                model.setValueAt(user_input.get(1), selected_row_ix, 1);
//                model.setValueAt(user_input.get(2), selected_row_ix, 2);
//                UserAccountDirectory.updateAccount(set_user_input_values(userAccount, user_input));
//                break;
//            }
//        }   
        
//        medicalServiceCentralisationEcoSystem.setRestaurantDirectory(restaurantDirectory);
        JOptionPane.showMessageDialog(this, "Values updated");
//        addrecordstotable();
        
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int selected_row_ix = jTableRequests.getSelectedRow();

        if(selected_row_ix < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) jTableRequests.getModel();
        UserAccount select_user_account_details = (UserAccount)model.getValueAt(selected_row_ix, 0);
//        UserAccountDirectory = medicalServiceCentralisationEcoSystem.getUserAccountDirectory();
//        UserAccountDirectory.deleteAccount(select_user_account_details);
////        ecosystem.setRestaurantDirectory(restaurantDirectory);
        model.removeRow(selected_row_ix);
        addrecordstotable();
        clearFields();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTableRequestsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableRequestsMouseClicked
        // TODO add your handling code here:
        jButtonCreate.setEnabled(false);
        int selected_row_ix = jTableRequests.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTableRequests.getModel();
        UserAccount select_user_account_details = (UserAccount)model.getValueAt(selected_row_ix, 0);
        jTextFieldCustName.setEditable(false);
        jTextFieldCustName.setText(select_user_account_details.getUsername());
        
        Role role = select_user_account_details.getRole();
        System.out.println("role.toString(): "+role.toString());
        
        
//        if(role.toString().equals("CustomerSupportMember")){
//            CustomerSupportTeam customerSupportTeam = select_user_account_details.getCustomerSupportTeam();
////            accountantDirectory = customerSupportTeam.getCustomerSupportMemberDirectory();
////            HashMap<String, CustomerSupportMember> accountantList = accountantDirectory.getCustomerSupportMemberList();
//            CustomerSupportMember accountant = accountantList.get(select_user_account_details.getUsername());
//            jTextFieldCustPhone.setText(accountant.getCustomerSupportMemberName());
//        }
        
        jTextFieldNotes.setText(select_user_account_details.getPassword());
        
    }//GEN-LAST:event_jTableRequestsMouseClicked

    private void jRadioButtonMedTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMedTestActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonMedTest.isSelected()){
            jRadioButtonConsultation.setSelected(false);
            jRadioButtonMedEquipment.setSelected(false);
            request_category = "MedicalTest";
        }
    }//GEN-LAST:event_jRadioButtonMedTestActionPerformed

    private void jRadioButtonConsultationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonConsultationActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonConsultation.isSelected()){
            jRadioButtonMedTest.setSelected(false);
            jRadioButtonMedEquipment.setSelected(false);
            request_category = "Consultation";
        }
    }//GEN-LAST:event_jRadioButtonConsultationActionPerformed

    private void jRadioButtonMedEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMedEquipmentActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonMedEquipment.isSelected()){
            jRadioButtonMedTest.setSelected(false);
            jRadioButtonConsultation.setSelected(false);
            request_category = "MedicalEquipment";
        }
    }//GEN-LAST:event_jRadioButtonMedEquipmentActionPerformed

    private void jTextFieldCustPincodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCustPincodeActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jTextFieldCustPincodeActionPerformed

    private void jTextFieldCustPincodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCustPincodeKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldCustPincodeKeyPressed
    private UserAccount set_user_input_values(UserAccount userAccount, ArrayList<String> user_input) {
//        userAccount.getEmployee().setEmployee_id(user_input.get(0));
//        userAccount.getEmployee().setEmployee_name(user_input.get(1));
        userAccount.setPassword(user_input.get(2));
        return userAccount;
    }
    private void clearFields(){
        jTextFieldCustName.setText("");
        jTextFieldCustPhone.setText("");
        jTextFieldNotes.setText("");
    }
    public ArrayList<String> check_empty_field(){
        ArrayList<String> user_input = new ArrayList<>();
        String user_cust_name = jTextFieldCustName.getText();
        String user_cust_phone = jTextFieldCustPhone.getText();
        String user_cust_email = jTextFieldCustEmail.getText();
//        String user_hospital_id = (String) jComboBoxHospitalList.getSelectedItem();
        String user_pincode = jTextFieldCustPincode.getText();
        Date date = jDateChooserTestDate.getDate();
        String user_request_date = new SimpleDateFormat("MM.dd.yyyy").format(date);
//        String user_request_date = jDateChooserTestDate.getDateFormatString();
        String user_cust_notes = jTextFieldNotes.getText();
        
        
        if(user_cust_name.isEmpty()){
            JOptionPane.showMessageDialog(this, "User Name can't be left empty.");
        }
        else if(user_cust_phone.isEmpty()){
            JOptionPane.showMessageDialog(this, "User Phone Number can't be left empty.");
        }
        else if(user_cust_email.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter an email.");
        }

        else if(user_pincode.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the user pincode");
        }
        else if(user_request_date.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter a request date.");
        }
        else if(request_category.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please choose a category.");
        }
        else if(user_cust_notes.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the request details.");
        }
        
        user_input.add(user_cust_name);
        user_input.add(user_cust_phone);
        user_input.add(user_cust_email);
//        user_input.add(user_hospital_id);
        user_input.add(user_pincode);
        user_input.add(user_request_date);
        user_input.add(request_category);
        user_input.add(user_cust_notes);
        user_input.add("HUMAN");
        return user_input;
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgdimg;
    private javax.swing.JButton jButtonCreate;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonUpdate;
    private com.toedter.calendar.JDateChooser jDateChooserTestDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEmpID;
    private javax.swing.JLabel jLabelEmpName;
    private javax.swing.JLabel jLabelEmpName1;
    private javax.swing.JLabel jLabelEmpName2;
    private javax.swing.JLabel jLabelEmpName3;
    private javax.swing.JLabel jLabelEmpName5;
    private javax.swing.JLabel jLabelPassword;
    private javax.swing.JRadioButton jRadioButtonConsultation;
    private javax.swing.JRadioButton jRadioButtonMedEquipment;
    private javax.swing.JRadioButton jRadioButtonMedTest;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRequests;
    private javax.swing.JTextField jTextFieldCustEmail;
    private javax.swing.JTextField jTextFieldCustName;
    private javax.swing.JTextField jTextFieldCustPhone;
    private javax.swing.JTextField jTextFieldCustPincode;
    private javax.swing.JTextField jTextFieldNotes;
    // End of variables declaration//GEN-END:variables

    

    private void addrecordstotable() {
    
        DefaultTableModel model = (DefaultTableModel) jTableRequests.getModel();
        model.setRowCount(0);
        RequestDirectory requestDirectory = medicalServiceCentralisationEcoSystem.getRequestDirectory();
        if(requestDirectory!=null){
            ArrayList<Request> requestList = requestDirectory.getRequestList();
            for(Request request: requestList)
            {   
                model.addRow(new Object[]{request,request.getCustomer_name(),request.getCustomer_phone(),request.getCustomer_email(),request.getCustomer_pincode(),request.getRequest_date(),request.getRequest_category(),request.getRequest_description(), request.getModified_time()});

            }

            jTableRequests.setModel(model);
        }
        
    }
    
    
}
